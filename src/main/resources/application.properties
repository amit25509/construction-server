server.port=5000
#spring.datasource.url= jdbc:mysql://localhost:3306/test
#spring.datasource.username= root
#spring.datasource.password= helloworld
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect



#spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres
#spring.datasource.url= jdbc:postgresql://ec2-54-146-91-153.compute-1.amazonaws.com:5432/d745unk5vpgpk3 sslmode=require
#spring.datasource.username= ypqfwsbaiszpzm
#spring.datasource.password= 175badb86d1316d2c1504e8064900acfe217fac3a3533851a6fdb5b47b0c7562 
#spring.jpa.database-platform== org.hibernate.dialect.PostgreSQLDialect   


#--------------AWS Database----------------
#spring.datasource.url= jdbc:sql12.freemysqlhosting.net:3306/sql12357206
#spring.datasource.username= sql12357206
#spring.datasource.password= uhpduBLmDU

spring.h2.console.enabled=true
spring.datasource.platform=h2
spring.datasource.url=jdbc:h2:mem:test

spring.jpa.hibernate.ddl-auto= update

# App Properties
utils.app.jwtSecret= MySecretKey
utils.app.jwtExpirationMs= 69006900

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#CorsConfiguration class uses @Profile annotation to load its configuration only on a development environment. We will specify the active profile in the application.properties file:

# application.properties
#spring.profiles.active=development

spring.h2.console.settings.web-allow-others=true
spring.datasource.initialization-mode=always

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=tr‌​ue
